---
title: "The history of behavioural addictions research (according to PubMed)"
description: ""
author:
  - name: Rob Heirene
categories: [Gambling] 
date: 2023-08-25
draft: true 
---

```{r results=FALSE, warning=FALSE, message=FALSE}
#| code-fold: true
#| code-summary: "Code: set-up"

# Install and load the groundhog package to ensure consistency of the package versions used here:
# install.packages("groundhog") # Install

library(groundhog) # Load

# List desired packages:
packages <- c('readr', # Load dataset from GitHib
              'RCurl', # Load dataset from GitHib
              'tidyverse', # Clean, organise, and visualise data
              'plotly', # Add interactive elements to figures
              'gganimate', # Make animated plots
              'png',# Helps render gganimate plots
              'gifski', # Helps render gganimate plots
              'rmarkdown', # Helps render gganimate plots
              'av', # render gganimate plots as videos
              'Cairo', # Anti-aliasing for the line plots (smoothing output)
              'ggtext', # make fancy labels in plots
              'sysfonts', # Special fonts for figures
              'showtext', # Special fonts for figures
              'htmlwidgets', # Make plotly plots HTML format for rendering in Quarto
              'scico', # Colour palette
              'sessioninfo') # Detailed session info for reproducibility 

# Load desired package with versions specific to project start date:
groundhog.library(packages, "2023-08-01") 

# Load new font for figures/graphs
font_add_google("Poppins", "Poppins")
font_add_google("Reem Kufi", "Reem Kufi")
showtext_auto(enable = TRUE) 

```

Okay, so let's load in the dataset and do a little cleaning:

```{r results=FALSE, warning=FALSE, message=FALSE}
#| code-fold: true
#| code-summary: "Code: load dataset"

url_behav_addic_data_link <- "https://raw.githubusercontent.com/rheirene/pub-med-scape-behav-addictions/main/Data%20extraction/combined_results_clean.csv"

raw_data <- read_csv(url_behav_addic_data_link) %>%
  as_tibble()

str(raw_data)
# View(data)

# Despite my best efforts with manual searching, my explorations of this dataset in R revealed that there are a few erratums/corrigendums and one notice of retraction included in the data. Let's remove these before moving forward:
filtered_data <- raw_data %>%
  filter(str_detect(Publication_Type, "Erratum") | 
         str_detect(Publication_Type, "corrigendum") | 
         str_detect(Publication_Type, "Retraction")) %>% 
  distinct(PMID, .keep_all = TRUE)

data <- raw_data %>% 
  anti_join(filtered_data)

```

```{r include=FALSE}
data %>%
  distinct(PMID) %>%
  nrow() %>%
  as_tibble() %>%
  mutate(full_count = nrow(data)) %>%
  mutate(full_unique_discrepancy = full_count-value) %>%
  rename(unique_count = value)

# Find the first study for each "addiction":
data %>%
  distinct(PMID, .keep_all = TRUE) %>%
  group_by(Label) %>% 
  summarise(
    min = min(Year),
    max = max(Year)
  ) %>% 
  arrange(min) %>% 
  print(n=22)



```

```{r  warning=FALSE, message=FALSE}
#| code-fold: true
#| code-summary: "Code: Bar chart of total pubs"
#| fig-align: center


# Compute some summary values will use in the labels:
n_papers_2022<- data %>%
  distinct(PMID, .keep_all = TRUE) %>%
  filter(Year == 2022) %>%
  distinct(PMID) %>% 
  count() %>%
  pull()

n_journals_2022<- data %>%
  distinct(PMID, .keep_all = TRUE) %>%
  filter(Year == 2022) %>%
  distinct(Journal_Title) %>% 
  count() %>%
  pull()

# Prepare data:
data_total_per_year_pubs <- data %>%
   distinct(PMID, .keep_all = TRUE) %>%
   filter(Year != "2023") %>%
   group_by(Year) %>%
   count() %>%
   ungroup() %>%
  mutate(first_study_1961_label = case_when(Year >= 1961 & Year < 1980 ~ sprintf("1961  \nFirst available study: \n\"Compulsive gambling\""),
                               TRUE ~ "")) %>%
  mutate(gam_1980_label = case_when(Year >= 1980 & Year < 1994 ~ sprintf("1980  \nPathological Gambling added \nto DSM (version III)"),
                               TRUE ~ "")) %>%
  mutate(behav_addic_1994_label = case_when(Year >= 1994 & Year < 2004 ~ sprintf("1994  \nFirst mention of \"Behavioural \n addictions\" in the literature"),
                               TRUE ~ "")) %>%
  mutate(first_gaming_2004_label = case_when(Year >= 2004 & Year < 2013 ~ sprintf("2004  \nFirst available studies \non gaming addiction"),
                               TRUE ~ "")) %>%
  mutate(gam_DSMV_label = case_when(Year >= 2013 & Year < 2020 ~ sprintf("2013 \n\"Gambling disorder\"\nadded in \"addictive \ndisorders\" class in \nDSM-V"),
                               TRUE ~ "")) %>%
  mutate(final_year_label = case_when(
    Year >= 2020 & Year < 2023 ~ sprintf("2022 \n%s studies\n published \nacross %s  \njournals", n_papers_2022, n_journals_2022),
    TRUE ~ ""
  ))                     
                   
 # Make plot: 
total_year_gganimate <- data_total_per_year_pubs %>%
   ggplot(aes(Year, n)) + 
   geom_point() + 
   geom_line(size = 1.1, color = "#289998") + 
  # Add year counting label
   geom_text(aes(x = 1984, y = 370, label = as.factor(Year)), hjust = 0, vjust = 0, alpha = 0.6, col = "#289998", size = 15, family = "Reem Kufi") +
  # Add 1961 first study label
  geom_text(aes(x = 1961, y =90, label = first_study_1961_label), hjust = 0, vjust = 0, alpha = 1, col = "#F5F7F0", size = 4, family = "Reem Kufi") +
  # Add 1980 gambling label
  geom_text(aes(x = 1970, y =100, label = gam_1980_label), hjust = 0, vjust = 0, alpha = 1, col = "#F5F7F0", size = 4, family = "Reem Kufi") +
  # Add 1994 behavioural addictions label
  geom_text(aes(x = 1984, y =110, label = behav_addic_1994_label), hjust = 0, vjust = 0, alpha = 1, col = "#F5F7F0", size = 4, family = "Reem Kufi") +
  # Add 2004 gaming addiction label
  geom_text(aes(x = 1994, y =150, label = first_gaming_2004_label), hjust = 0, vjust = 0, alpha = 1, col = "#F5F7F0", size = 4, family = "Reem Kufi") +
   # Add 2013 gambling label
  geom_text(aes(x = 2002, y =260, label = gam_DSMV_label), hjust = 0, vjust = 0, alpha = 1, col = "#F5F7F0", size = 4, family = "Reem Kufi") +
  # Add final year label
  geom_text(aes(x = 2014, y =670, label = final_year_label), hjust = 0, vjust = 0, alpha = 1, col = "#F5F7F0", size = 4, family = "Reem Kufi") +
  # Define theme elements
   theme(
     plot.background = element_rect(fill = "#002B36",  color = NA), # ADDING THIS NA REMOVES BORDER AROUND PLOT ON WEBSITE
     panel.background = element_rect(fill = "#002B36"),
     text = element_text(family = "Reem Kufi", color = "#F5F7F0"),
     axis.text = element_text(color = "#F5F7F0", size = 12),
     panel.grid = element_blank(),
     plot.margin = margin(20, 5, 20, 20),
     axis.title.y = element_blank(),  # Adjust y-axis title position
     axis.title.x = element_text(margin = margin(t = 18), size = 14),
     plot.title = element_text(color = "#F5F7F0", size = 15, margin = margin(b = 15), hjust = 14)
     # panel.border = element_rect(color = "#002B36")
   ) +
  scale_x_continuous(breaks = seq(1960, 2020, by = 10), expand = c(.01, 0)) +  # Define x-axis dates & Make the plot fill the available space better
  scale_y_continuous(limits = c(0, 1000), breaks = seq(0, 1000, by = 250)) +  # Define y-axis labels
  # Add titles and labels
   labs(
     title = "Number of Behavioural Addictions papers published per year on PubMed",  # Add header
     subtitle = "(Up to end of 2022)",
     x = "Year",
     caption = "Made by Rob Heirene (@rheirene)"
   ) +
  theme(plot.caption = element_text(color = "#289998",  hjust = .98,
                                    vjust = .98)) +
  # Add gganimate animation
   transition_reveal(Year) 
      # view_follow()


# # Animate plot in GIF format:
# animate(total_year_gganimate, 
#         width = 700, height = 420, 
#         end_pause = 15,
#         type = "cairo",
#         duration = 21) 
# 
# # Save GIF: 
# anim_save("posts/2023-history-of-behavioural-addictions-PubMed/total_year_gganimate.gif", animation = last_animation())

# Animate and present plot:
animate(
  total_year_gganimate,
  width = 700, height = 420, 
        rewind = FALSE, 
        type = "cairo",
  duration = 14,
  fps = 12,
  renderer = av_renderer()
)
```

Â 

Now let's start to look publication rates for each "addiction" in our dataset.

```{r include = FALSE, warning=FALSE, message=FALSE}
#| fig-align: center
#| code-fold: true
#| code-summary: "Code: Bar chart (publications by addiction)"
#| fig-height: 7
# Get palette colors
num_labels <- length(unique(data$Label))
palette_colors <- rev(scico(n = num_labels, palette = 'imola'))

# Prepare the data:
data %>% 
    # Tidy the behavioural addiction labels:
    mutate(Label = str_replace_all(Label, "_", " ") %>%
                 str_to_title()) %>%
  # Aggregate the data by behavioural addiction type:
  group_by(Label) %>% 
  count() %>% 
  arrange(n) %>% 
  ungroup() %>% 
  mutate(percent = round(n/sum(n)*100, 2)) %>% 
  mutate(Label = factor(Label, levels = unique(Label))) %>%  # order the Label by descending n
# Produce plot:
ggplot(aes(x = n, y = Label, fill = Label)) +
  geom_col() +
  geom_label(
    aes(label = n), 
    hjust = 0, nudge_x = 10,
    fontface = "bold", family = "Fira Sans",
    fill = "white", label.size = 0
  ) +
  scale_x_continuous(limits = c(0,3800), expand = c(.01, .01)) +
  scale_fill_manual(values = palette_colors, guide = FALSE) + 
 theme(
     plot.background = element_rect(fill = "#002B36",  color = NA), # ADDING THIS NA REMOVES BORDER AROUND PLOT ON WEBSITE
     panel.background = element_rect(fill = "#002B36"),
     text = element_text(family = "Reem Kufi", color = "#F5F7F0"),
     axis.text = element_text(color = "#F5F7F0", size = 18),
     panel.grid = element_blank(),
     plot.margin = margin(10, 10, 10, 20),
     axis.title = element_blank(),  # Adjust y-axis title position
     axis.text.x = element_blank(),   # remove x-axis text
     axis.title.x = element_blank()   # remove x-axis title
   ) 

```

```{r  warning=FALSE, message=FALSE}
#| fig-align: center
#| code-fold: true
#| code-summary: "Code: Bar chart race (publications by addiction)"

# Get palette colors
num_labels <- length(unique(data$Label))
palette_colors <- rev(scico(n = num_labels, palette = 'imola'))

# Prepare the data:
data_bar_chart_race_pubs_year<- data %>% 
    # Tidy the behavioural addiction labels:
    mutate(Label = str_replace_all(Label, "_", " ") %>%
                 str_to_title()) %>%
  # Aggregate the data by behavioural addiction type:
  group_by(Year, Label) %>% 
  count() %>% 
  ungroup() %>%
  group_by(Label) %>% 
  mutate(Accumulated_Papers = cumsum(n)) %>% # Produce a variable that is the cumulative sum of studies for each disorder each year (this is what we will be plotting)
  # This next part is a bit clunky, but we need to find a way to have a value for every addiction for every year, even though we don't have one currently. We can do this by pivoting wider so we create a column for each year
  ungroup() %>%
  mutate(percent = round(n/sum(n)*100, 2))  %>% # just for interest
  # mutate(Label = factor(Label, levels = unique(Label))) %>%  # order the Label by descending n
    mutate(Year = paste0("label_", Year)) %>% # so we can select columns later on easily
  select(-n,
         -percent) %>% # Remove these columns otherwise it throws off the pivot_longer below and makes multiple rows per date
  pivot_wider(names_from = Year, values_from = Accumulated_Papers) %>% 
  mutate(label_1961 = case_when(label_1961 == 1 ~ 1,
                                is.na(label_1961) ~ 0)) %>% # This sets the first year to 0 unless there is a paper published, allowing us to use this as a starting point for imputing values
  pivot_longer(cols = starts_with("label_"), names_to = "Year", values_to = "Accumulated_Papers") %>% # now put back into longer format
  group_by(Label) %>%
  fill(Accumulated_Papers, .direction = "down") %>% # Impute missing values from one above, by addiction type
    mutate(Year = str_replace(Year, "label_", ""))  %>% # remove label from the year values
   ungroup() %>%
   group_by(Year) %>% 
  # Provide a rank for each addiction that ensures no overlap:
 arrange(Year, desc(Accumulated_Papers), Label) %>%
  mutate(
    Rank = row_number(),
    Rank = ifelse(duplicated(Accumulated_Papers, fromLast = TRUE), Rank - 0.0001, Rank)
  ) %>%
  ungroup() 


# View(data_bar_chart_race_pubs_year) #  Check everything looks okay before proceeding!

# Produce plot:
bar_chart_race_pubs_year <- 
  data_bar_chart_race_pubs_year %>% 
      ggplot(aes(x = -Rank, y = Accumulated_Papers, fill = Label)) + 
    geom_tile(aes(y = Accumulated_Papers/2, height = Accumulated_Papers), 
              width = 0.9) + 
  coord_flip(clip = "off", expand = FALSE) + # Flip
  # Add year counting label
   geom_text(aes(y = 2400, x = -24, 
                 label = as.factor(Year)), 
             hjust = 0, vjust = 0, 
             alpha = 0.6, colour = "#289998", 
             size = 14, family = "Reem Kufi") +
  # Add behavioural addiction label
  geom_text(aes(x = -Rank, y = -100, 
                label = Label),
            hjust = 1, 
            color = "#F5F7F0",
            family = "Reem Kufi") + 
  # Add value label
  geom_text(aes(y = Accumulated_Papers, 
              label = as.factor(Accumulated_Papers)), # Putting this as a factor as key otherwise it displays decimals to ~10 places at times!
          hjust = -0.2,
          color = "#F5F7F0",
          fontface = "bold", 
          family = "Reem Kufi") +
  # scale_y_continuous(limits = c(0,3800), breaks = seq(0, 3500, by = 500), expand = c(.01, 0)) +  # Define x-axis dates & Make the plot fill the available space
    scale_fill_manual(values = palette_colors, guide = FALSE) +
  theme(legend.position = "none") +
 theme(
     plot.background = element_rect(fill = "#002B36",  color = NA), # ADDING THIS NA REMOVES BORDER AROUND PLOT ON WEBSITE
     panel.background = element_rect(fill = "#002B36"),
     text = element_text(family = "Reem Kufi", color = "#F5F7F0"),
     axis.text = element_text(color = "#F5F7F0", size = 12),
     panel.grid = element_blank(),
     plot.margin = margin(10, 60, 20, 160),
     axis.text.y = element_blank(), 
     axis.text.x = element_blank(),  # remove x-axis text
     axis.title = element_blank()   # remove x-axis title
     # plot.title = element_text(color = "#289998", size = 15, margin = margin(b = 15), hjust = 14),
     # axis.text.y = element_text(size = 12, hjust = 1)
     # panel.border = element_rect(color = "#002B36")
   ) +
  # Add titles and labels
   labs(
     # title = "",  # Add header
     # subtitle = "",
     caption = "Made by Rob Heirene (@rheirene)"
   ) +
  theme(plot.caption = element_text(color = "#289998",  hjust = 1.2,
                                    vjust = 0.5)) +
  transition_states(Year, 
                    wrap = FALSE, # THis stops it from rewinding at the end
                    transition_length = 5, 
                    state_length = 1) +
   enter_grow() +
  ease_aes('linear')


# # Animate plot in GIF format:
# animate(bar_chart_race_pubs_year, 
#         fps = 20, 
#         end_pause = 50,
#         duration = 30, 
#         width = 600, height = 650,
#         type = "cairo")
# 
# # Save GIF: 
# anim_save("posts/2023-history-of-behavioural-addictions-PubMed/bar_chart_pubs_year_gganimate.gif", animation = bar_chart_race_pubs_year)

# Animate in video format:
animate(bar_chart_race_pubs_year, 
        fps = 20, 
        end_pause = 50,
        duration = 30, 
        rewind = FALSE,
        width = 600, height = 650,
        type = "cairo",
        renderer = av_renderer())

```

Â 

::: {.callout-tip collapse="true" icon="false"}
## Expand for session information

```{r}
#| code-fold: true
#| code-summary: "Code: Get session info"

session_info(pkgs = "attached")

```
:::

------------------------------------------------------------------------

```{=html}
<script src="https://giscus.app/client.js"
        data-repo="rheirene/Quarto_Website"
        data-repo-id="R_kgDOJ0d4fA"
        data-category-id="DIC_kwDOJ0d4fM4CXv7I"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="bottom"
        data-theme="dark_dimmed"
        data-lang="en"
        crossorigin="anonymous"
        async>
</script
```
